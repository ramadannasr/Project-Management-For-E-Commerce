@*@if (TempData["msg10"] != null)
{
    @Html.Raw(TempData["msg10"])
}*@


@model eCommerce.Models.Employee


@{
    ViewBag.Title = "AddNewUser";
    Layout = "~/Views/admin-layout/_admin-layout.cshtml";
}
<style>
    body{background-image:url(../../Content/images/blue3.png)}
  
</style>
@section admin_personal_section{
<h2>Add New User</h2>
@using (Html.BeginForm("AddNewUser", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
     
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = " col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
            @if (Session["type"] != null)
            {

                <div class="form-group">
                    <div class="col-md-2" style="text-decoration:solid"><label>Description</label> </div> 
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.JobDescription, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.JobDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

            }
            else
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.JobDescription, htmlAttributes: new { @class = "col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.JobDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.JobDescription, "", new { @class = "text-danger" })
                    </div>
                </div>
            }


        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-10">
             
                   <input type = "file"  name = "image" id = "image" accept = "image/*" />
                     
                
                
            </div>
        </div>
        @if (Session["type"] != null)
        {

            <div class="form-group">
                @Html.LabelFor(model => model.UserType, "UserType", htmlAttributes: new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("UserType", null, null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                </div>
            </div>

        }
        
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.UserType, "UserType", htmlAttributes: new { @class = " col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("UserType", null, "--Select User Type--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Experience, htmlAttributes: new { @class = "col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Experience, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Experience, "", new { @class = "text-danger" })
                </div>
            </div>

        }



        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add User" class="btn btn-default" />
            </div>
        </div>
    </div>
}

    }
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
